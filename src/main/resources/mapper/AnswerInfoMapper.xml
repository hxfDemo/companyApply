<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.apply.ism.mapper.AnswerInfoMapper">
  <resultMap id="BaseResultMap" type="com.apply.ism.entity.AnswerInfo">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="create_id" jdbcType="BIGINT" property="createId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_id" jdbcType="BIGINT" property="updateId" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="data_state" jdbcType="VARCHAR" property="dataState" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="version_no" jdbcType="BIGINT" property="versionNo" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="spare1" jdbcType="VARCHAR" property="spare1" />
    <result column="spare2" jdbcType="VARCHAR" property="spare2" />
    <result column="spare3" jdbcType="VARCHAR" property="spare3" />
    <result column="years" jdbcType="VARCHAR" property="years" />
    <result column="companyid" jdbcType="BIGINT" property="companyid" />
    <result column="answer_ids" jdbcType="VARCHAR" property="answerIds" />
    <result column="total_score" jdbcType="VARCHAR" property="totalScore" />
  </resultMap>
  <sql id="Base_Column_List">
    id, create_id, create_time, update_id, update_time, data_state, sort, version_no, 
    remarks, spare1, spare2, spare3, years, companyid, answer_ids, total_score
  </sql>
  <select id="wjdcScore" resultType="map" parameterType="string">
    SELECT a.create_time,ROUND(avg(a.total_score),2) avg_score,count(a.id) total_count ,c.ascription sswmb,c.company
    FROM `answer_info` a
    LEFT JOIN company c on c.id=a.companyid
    where 1=1
    <if test="param1 != null and param1 !=''">
      AND c.`company` LIKE CONCAT('%',#{param1},'%')
    </if>
    GROUP BY a.companyid
  </select>

</mapper>